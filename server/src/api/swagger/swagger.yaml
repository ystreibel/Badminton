swagger: "2.0"
info:
  version: "1.0.0"
  title: UFOLEP Badminton API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /api/v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
 Bearer:
  description: |
   For accessing the API a valid JWT token must be passed in all the queries in
   the 'Authorization' header.


   A valid JWT token is generated by the API and retourned as answer of a call
   to the route /auth giving a valid username & password.


   The following syntax must be used in the 'Authorization' header :

       Bearer xxxxxx.yyyyyyy.zzzzzz
  type: apiKey
  name: Authorization
  in: header
tags:
  - name: auth
    description: Everything about Authentication
  - name: matchs
    description: Everything about your Matchs
  - name: teams
    description: Everything about your Teams
  - name: users
    description: Everything about your Users
paths:
  /auth:
      x-swagger-router-controller: authentications
      post:
        tags:
          - auth
        description: |
         Allow users to log in, and to receive a Token
        operationId: createAuthentication
        parameters:
         -
          in: body
          name: body
          description: The username/password
          required: true
          schema:
           $ref: '#/definitions/Auth'
        responses:
         '200':
          description: Login Success
          schema:
           $ref: '#/definitions/Token'
         '400':
          description: Whether the user is not found or error while login
          schema:
           $ref: '#/definitions/ErrorResponse'
         '403':
          description: >-
           If user is not found (bad credentials) OR if user can not login (a
           concierge of an unactive client)
          schema:
           $ref: '#/definitions/ErrorResponse'
  /matchs:
    # binds a127 app logic to a route
    x-swagger-router-controller: matchs
    get:
      security:
        - Bearer: []
      tags:
        - matchs
      description: Returns 'Matchs' to the caller
      # used as the method name of the controller
      operationId: getMatchs
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MatchsResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      security:
        - Bearer: []
      tags:
        - matchs
      description: Create a new match to the list
      operationId: createMatch
      parameters:
        - name: match
          description: Match properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Match"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /matchs/{id}:
    x-swagger-router-controller: matchs
    get:
      security:
        - Bearer: []
      tags:
        - matchs
      description: Get a match
      operationId: getMatch
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MatchResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      security:
        - Bearer: []
      tags:
        - matchs
      description: Update a match
      operationId: updateMatch
      parameters:
        - name: id
          description: Match id
          type: string
          in: path
          required: true
        - name: match
          description: Match properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Match"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      security:
        - Bearer: []
      tags:
        - matchs
      description: Delete a match
      operationId: deleteMatch
      parameters:
        - name: id
          description: Match id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /teams:
    # binds a127 app logic to a route
    x-swagger-router-controller: teams
    get:
      security:
        - Bearer: []
      tags:
        - teams
      description: Returns 'Teams' to the caller
      # used as the method name of the controller
      operationId: getTeams
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TeamsResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      security:
        - Bearer: []
      tags:
        - teams
      description: Create a new team to the list
      operationId: createTeam
      parameters:
        - name: team
          description: Team properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Team"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /teams/{id}:
    x-swagger-router-controller: teams
    get:
      security:
        - Bearer: []
      tags:
        - teams
      description: Get a team
      operationId: getTeam
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TeamResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            
    put:
      security:
        - Bearer: []
      tags:
        - teams
      description: Update a team
      operationId: updateTeam
      parameters:
        - name: id
          description: Team id
          type: string
          in: path
          required: true
        - name: team
          description: Team properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Team"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      security:
        - Bearer: []
      tags:
        - teams
      description: Delete a team
      operationId: deleteTeam
      parameters:
        - name: id
          description: Team id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: users
    get:
      security:
        - Bearer: []
      tags:
        - users
      description: Returns users list
      operationId: getUsers
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UsersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      security:
        - Bearer: []
      tags:
        - users
      description: Create a new user
      operationId: createUser
      parameters:
        - name: user
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserCreate"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}:
    x-swagger-router-controller: users
    get:
      security:
        - Bearer: []
      tags:
        - users
      description: Get a user
      operationId: getUser
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      security:
        - Bearer: []
      tags:
        - users
      description: Update a user
      operationId: updateUser
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
        - name: User
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserUpdate"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      security:
        - Bearer: []
      tags:
        - users
      description: Delete a User
      operationId: deleteUser
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  UserCreate:
    properties:
      username:
        type: string
      password:
        type: string
        format: password
      firstname:
        type: string
      lastname:
        type: string
      birthDate:
        type: string
        format: date-time
      gender:
        type: string
        enum: ["F", "M"]
      avatar:
        type: string
      phone:
        type: string
      expirationDate:
        type: string
        format: date-time
      enabled:
        type: boolean
      roles:
        type: array
        minItems: 1
        maxItems: 2
        uniqueItems: true
        items:
          type: string
          enum: ["USER", "ADMIN"]
      team:
        type: string
    required:
      - username
      - password
      - firstname
      - lastname
      - gender
      - phone
      - roles
      - team
  UserUpdate:
    properties:
      username:
        type: string
      password:
        type: string
        format: password
      firstname:
        type: string
      lastname:
        type: string
      birthDate:
        type: string
        format: date-time
      gender:
        type: string
        enum: ["F", "M"]
      avatar:
        type: string
      phone:
        type: string
      expirationDate:
        type: string
        format: date-time
      enabled:
        type: boolean
      roles:
        type: array
        minItems: 1
        maxItems: 2
        uniqueItems: true
        items:
          type: string
          enum: ["USER", "ADMIN"]
      team:
        type: string
    required:
      - username
      - firstname
      - lastname
      - gender
      - phone
      - roles
      - team
  UserResponse:
    properties:
      _id:
        type: string
      username:
        type: string
      password:
        type: string
        format: password
      firstname:
        type: string
      lastname:
        type: string
      birthDate:
        type: string
        format: date-time
      gender:
        type: string
        enum: ["F", "M"]
      avatar:
        type: string
      phone:
        type: string
      creationDate:
        type: string
        format: date-time
      creationBy:
        type: object
        properties:
          _id:
            type: string
          username:
            type: string
        required:
          - _id
          - username
      expirationDate:
        type: string
        format: date-time
      updateDate:
        type: string
        format: date-time
      enabled:
        type: boolean
      roles:
        type: array
        minItems: 1
        maxItems: 2
        uniqueItems: true
        items:
          type: string
          enum: ["USER", "ADMIN"]
      team:
        type: string
    required:
      - _id
      - username
      - firstname
      - lastname
      - gender
      - phone
      - roles
      - team
      - creationDate
      - creationBy
      - updateDate
  UsersResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        username:
          type: string
        password:
          type: string
          format: password
        firstname:
          type: string
        lastname:
          type: string
        birthDate:
          type: string
          format: date-time
        gender:
          type: string
          enum: ["F", "M"]
        avatar:
          type: string
        phone:
          type: string
        creationDate:
          type: string
          format: date-time
        creationBy:
          type: object
          properties:
            _id:
              type: string
            username:
              type: string
          required:
            - _id
            - username
        expirationDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
        enabled:
          type: boolean
        roles:
          type: array
          minItems: 1
          maxItems: 2
          uniqueItems: true
          items:
            type: string
            enum: ["USER", "ADMIN"]
        team:
          type: string
      required:
        - _id
        - username
        - firstname
        - lastname
        - gender
        - phone
        - roles
        - team
        - creationDate
        - creationBy
        - updateDate
  Team:
    properties:
        name:
          type: string
        players: 
          type: array
          items:
            type: object
            properties:
              avatar:
                type: string
              firstname:
                type: string
              lastname:
                type: string
              email: 
                type: string
              phone:
                type: string
              isCaptain:
                type: boolean
            required:
              - firstname
              - lastname
              - email
              - phone
              - isCaptain
        place:
          type: object
          properties:
            name:
              type: string
            location:
              type: object
              properties:
                type: 
                  type: string
                coordinates:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
                  required:
                    - latitude
                    - longitude
                category:
                  type: string
              required:
                - type
                - coordinates
                - category
            schedule:
              type: array
              items:
                type: object
                properties:
                  day:
                    type: string
                  start:
                    type: string
                  end:
                    type: string  
                required:
                  - day
                  - start
                  - end
          required:
            - name
            - location
            - schedule
    required:
      - name
      - players
      - place
  TeamResponse:
    properties:
        _id:
          type: string
        name:
          type: string
        players: 
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              avatar:
                type: string
              firstname:
                type: string
              lastname:
                type: string
              email: 
                type: string
              phone:
                type: string
              isCaptain:
                type: boolean
            required:
              - firstname
              - lastname
              - email
              - phone
              - isCaptain
        place:
          type: object
          properties:
            name:
              type: string
            location:
              type: object
              properties:
                type: 
                  type: string
                coordinates:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
                  required:
                    - latitude
                    - longitude
                category:
                  type: string
              required:
                - type
                - coordinates
                - category
            schedule:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                  day:
                    type: string
                  start:
                    type: string
                  end:
                    type: string
                required:
                - _id
                - day
                - start
                - end
          required:
            - name
            - location
            - schedule
    required:
      - _id
      - name
      - players
      - place      
  TeamsResponse:
    required:
      - teams
    properties:
      teams:
        type: array
        items:
          type: object
          properties:
            _id:
              type: string
            name:
              type: string
            players: 
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                  avatar:
                    type: string
                  firstname:
                    type: string
                  lastname:
                    type: string
                  email: 
                    type: string
                  phone:
                    type: string
                  isCaptain:
                    type: boolean
                required:
                  - firstname
                  - lastname
                  - email
                  - phone
                  - isCaptain
            place:
              type: object
              properties:
                name:
                  type: string
                location:
                  type: object
                  properties:
                    type: 
                      type: string
                    coordinates:
                      type: object
                      properties:
                        latitude:
                          type: number
                        longitude:
                          type: number
                      required:
                        - latitude
                        - longitude
                    category:
                      type: string
                  required:
                    - type
                    - coordinates
                    - category
                schedule:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      day:
                        type: string
                      start:
                        type: string
                      end:
                        type: string      
                    required:
                      - _id
                      - day
                      - start
                      - end
              required:
                - name
                - location
                - schedule
          required:
            - _id
            - name
            - players
            - place
  Match:
    properties:
        season:
          type: number
        gender:
          type: string
        division: 
          type: number
        pools:
          type: string
        day:
          type: object
          properties:
            id: 
              type: string
            start_date:
              type: string
            end_date:
              type: string
          required:
            - id
            - start_date
            - end_date
        schedule_date:
          type: string
        local: 
          type: string
        visitor:
          type: string
        local_score:
          type: number
        visitor_score:
          type: number
        base64MatchSheetImage:
          type: string
        base64ReceiptImage:
          type: string
    required:
      - season
      - gender
      - division
      - pools
      - day
      - local
      - visitor
  MatchResponse:
    properties:
      _id:
        type: string
      season:
        type: number
      gender:
        type: string
      division: 
        type: number
      pools:
        type: string
      day:
        type: object
        properties:
          id: 
            type: string
          start_date:
            type: string
          end_date:
            type: string
        required:
          - id
          - start_date
          - end_date
      schedule_date:
        type: string
      local: 
        type: string
      visitor:
        type: string
      local_score:
        type: number
      visitor_score:
        type: number
      base64MatchSheetImage:
        type: string
      base64ReceiptImage:
          type: string
    required:
      - _id
      - season
      - gender
      - division
      - pools
      - day
      - local
      - visitor    
  MatchsResponse:
    required:
      - matchs
    properties:
      matchs:
        type: array
        items:
          type: object
          properties:
            _id:
              type: string
            season:
              type: number
            gender:
              type: string
            division: 
              type: number
            pools:
              type: string
            day:
              type: object
              properties:
                id: 
                  type: string
                start_date:
                  type: string
                end_date:
                  type: string
              required:
                - id
                - start_date
                - end_date
            schedule_date:
              type: string
            local: 
              type: string
            visitor:
              type: string
            local_score:
              type: number
            visitor_score:
              type: number
            base64MatchSheetImage:
              type: string
            base64ReceiptImage:
                type: string
          required:
            - _id
            - season
            - gender
            - division
            - pools
            - day
            - local
            - visitor  
  GeneralResponse:
    type: object
    properties:
      success:
        type: boolean
        description: returns true if successful
      description:
        type: string
        description: a short operation comment 
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Auth:
   type: object
   properties:
    username:
     type: string
    password:
     type: string
  Token:
   type: object
   properties:
    success:
      type: boolean
    token:
      type: string